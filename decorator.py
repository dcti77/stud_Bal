# Подвиг 1. Объявите функцию с именем get_sq, которая вычисляет площадь прямоугольника по двум параметрам: width и height - ширина и высота прямоугольника. И возвращает результат (сама ничего на экран не выводит). То есть, функция имеет сигнатуру:
#
# def get_sq(width, height): ...
#
# Определите декоратор func_show для этой функции, который отображает результат на экране в виде строки (без кавычек):
#
# "Площадь прямоугольника: <значение>"
#
# Вызывать функцию и декоратор не нужно, только объявить. Применять декоратор к функции также не нужно.


# def get_sq(width, height):
#     return width * height
#
#
# def func_show(func):
#     def wrapper(*args, **kwargs):
#         print(f"Площадь прямоугольника: {func(*args, **kwargs)}")
#     return wrapper

#
# Подвиг 2. На вход программы поступает строка с названиями пунктов меню, записанные в одну строчку через пробел. Необходимо задать функцию с именем get_menu, которая преобразует эту строку в список из слов и возвращает этот список. Сигнатура функции, следующая:
#
# def get_menu(s): ...
#
# Определите декоратор для этой функции с именем show_menu, который отображает список на экран в формате:
# 1. Пункт_1
# 2. Пункт_1
# ...
# N. Пункт_N
#
# Примените декоратор show_menu к функции get_menu, используя оператор @. Более ничего в программе делать не нужно. Сами функции не вызывать.
#
# def show_menu(func):
#     def wrapper (*args, **kwargs):
#         for x, y in enumerate(func(*args, **kwargs)):
#             print(f"{x+1}. {y}")
#
#     return wrapper
#
#
# @show_menu
# def get_menu(s):
#     lst = s.split()
#     return lst
#
#
# get_menu("Привет как дела")


# Подвиг 3. На вход программы поступает строка из целых чисел, записанных через пробел. Напишите функцию get_list, которая преобразовывает эту строку в список из целых чисел и возвращает его. Определите декоратор для этой функции, который сортирует список чисел по возрастанию. Результат сортировки должен возвращаться при вызове декоратора.
#
# Вызовите декорированную функцию get_list и отобразите полученный отсортированный список lst командой:
#
# print(*lst)


# def sort_dec(func):
#     def wrapper(*args, **kwargs):
#         return sorted(func(*args, **kwargs))
#
#     return wrapper
#
#
# @sort_dec
# def get_list(l):
#     return list(map(int, l.split()))
#
#
# print(*get_list("10 9 0 5 6 3 1 9"))

